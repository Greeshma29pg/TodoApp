{"version":3,"sources":["components/todoList/todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MA+HeA,EAjHF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAIF,EACOG,KAAKC,MAAMJ,GAGX,GAMwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACZ,GAAKd,EAGA,GAAIA,GAAaY,EAClBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOP,EACR,2BAAKM,GAAZ,IAAqBE,KAAMlB,IAExBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OAEf,CACD,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SArBbsB,MAAM,oBAmDd,OAJAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAGA,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,2EAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OACRC,YAAY,uBACZJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GACPjC,EAAaiC,EAAMC,OAAOH,UAEjCpB,EACG,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAKnD,qBAAKa,UAAU,YAAf,SACKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBACTS,QAAS,kBAzDhC,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GAmDmC2B,CAASxB,EAAQC,OACpC,mBAAGU,UAAU,2BACTS,QAAS,kBAjD9B,SAACC,GAChB,IAAMI,EAAejC,EAAMkC,QAAO,SAAC1B,GAC/B,OAAOA,EAAQC,KAAOoB,KAE1B5B,EAASgC,GA6C0CE,CAAW3B,EAAQC,YANfD,EAAQC,SAcnD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAC/CS,QAnDN,WAAQ3B,EAAS,KAkDf,SAEI,yDC/GbmC,EAHH,WACV,OAAO,cAAC,EAAD,KCDTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e1fb94e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./style.css\"\r\n\r\n// get back localStorage data\r\nconst getLocalData = () => {\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n    if (lists) {\r\n        return JSON.parse(lists);\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\n\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    // add the items function \r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert('Please add note');\r\n        }\r\n        else if (inputData && toggleButton) {\r\n            setItems(\r\n                items.map((curElem) => {\r\n                    if (curElem.id === isEditItem) {\r\n                        return { ...curElem, name: inputData };\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n        }\r\n        else {\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputData,\r\n            };\r\n            setItems([...items, myNewInputData]);\r\n            setInputData(\"\");\r\n        }\r\n    }\r\n    // edit items \r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    }\r\n\r\n    // how to delete \r\n    const deleteItem = (index) => {\r\n        const updatedItems = items.filter((curElem) => {\r\n            return curElem.id !== index;\r\n        });\r\n        setItems(updatedItems);\r\n    };\r\n\r\n    // delete all \r\n    const removeAll = () => { setItems([]); };\r\n\r\n    // adding localstorage \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('mytodolist', JSON.stringify(items))\r\n    }, [items]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.svg\" alt=\"todologo\" />\r\n                        <figcaption>Add your List hereðŸ˜Ž</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"ðŸ–‹Add here\"\r\n                            className=\"form-control\"\r\n                            value={inputData}\r\n                            onChange={(event) => {\r\n                                setInputData(event.target.value);\r\n                            }} />\r\n                        {toggleButton ? (\r\n                            <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n                        ) : (\r\n                            <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* show our items  */}\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem) => {\r\n                            return (\r\n                                <div className=\"eachItem\" key={curElem.id}>\r\n                                    <h3>{curElem.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                        <i className=\"far fa-edit add-btn\"\r\n                                            onClick={() => editItem(curElem.id)}></i>\r\n                                        <i className=\"far fa-trash-alt add-btn\"\r\n                                            onClick={() => deleteItem(curElem.id)}></i>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    {/* remove all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\"\r\n                            onClick={removeAll}>\r\n                            <span>CHECKLIST</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\nimport Todo from './components/todoList/todo'\n\n\nconst App = () => {\n  return <Todo/>\n}\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n"],"sourceRoot":""}